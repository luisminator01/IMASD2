// <auto-generated />
using IMASD;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace IMASD.Migrations
{
    [DbContext(typeof(MyContextoBD))]
    partial class MyContextoBDModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "3.1.14")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("IMASD.Models.Departamento", b =>
                {
                    b.Property<int>("idDepartamento")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("nombreDep")
                        .IsRequired()
                        .HasColumnType("varchar(100)");

                    b.HasKey("idDepartamento");

                    b.ToTable("Departamentos");
                });

            modelBuilder.Entity("IMASD.Models.Empleado", b =>
                {
                    b.Property<int>("idEmpleado")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("apellidosEmp")
                        .IsRequired()
                        .HasColumnType("varchar(100)");

                    b.Property<string>("direccionEmp")
                        .IsRequired()
                        .HasColumnType("varchar(100)");

                    b.Property<bool>("estatusEmp")
                        .HasColumnType("bit");

                    b.Property<int>("idDepartamento")
                        .HasColumnType("int");

                    b.Property<int>("idTabulador")
                        .HasColumnType("int");

                    b.Property<string>("nombreEmp")
                        .IsRequired()
                        .HasColumnType("varchar(100)");

                    b.Property<string>("telefonoEmp")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("idEmpleado");

                    b.HasIndex("idDepartamento");

                    b.HasIndex("idTabulador");

                    b.ToTable("Empleados");
                });

            modelBuilder.Entity("IMASD.Models.Pago", b =>
                {
                    b.Property<int>("idPago")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("fPago")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("idEmpleado")
                        .HasColumnType("int");

                    b.HasKey("idPago");

                    b.HasIndex("idEmpleado");

                    b.ToTable("Pagos");
                });

            modelBuilder.Entity("IMASD.Models.Tabulador", b =>
                {
                    b.Property<int>("idTabulador")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("nivelTabulador")
                        .IsRequired()
                        .HasColumnType("varchar(1)");

                    b.Property<int>("sbruto")
                        .HasColumnType("int");

                    b.HasKey("idTabulador");

                    b.ToTable("Tabulador");
                });

            modelBuilder.Entity("IMASD.Models.Empleado", b =>
                {
                    b.HasOne("IMASD.Models.Departamento", "Departamentos")
                        .WithMany()
                        .HasForeignKey("idDepartamento")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("IMASD.Models.Tabulador", "Tabulador")
                        .WithMany()
                        .HasForeignKey("idTabulador")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("IMASD.Models.Pago", b =>
                {
                    b.HasOne("IMASD.Models.Empleado", "Empleados")
                        .WithMany()
                        .HasForeignKey("idEmpleado")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
